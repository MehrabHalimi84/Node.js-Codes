express 

for more praperty

expressjs.com

 app.get();   گرفتن اطلاعات
 app.post();   ارسال اطلاعات
 app.put;        اپدیت اطلاعات
 app.delete();  پاک کردن اطلاعات


 const port = process.env.PORT || 3000; 
 این یعنی این که اگه خوده سرور پورت خودشو تعیین کرده بود از اون استفاده کن اگر نه همون 3000



با پست من

postman
یه فاضی مثل فرانت درست میکنی که  بتونی اطلاعات رو بدون نیاز به فرانت وارد کنی که پست بشه




Joi یه کتابخونه‌ی قدرتمند برای ولیدیشن (اعتبارسنجی) داده‌هاست.
یعنی بررسی می‌کنه که داده‌هایی که از کاربر می‌گیریم، درست و منطقی باشن یا نه.
npm i Joi



schema 
الگویی هستش که برای ارور ها درست میشه 
میگه که اقا یه وررودی باید چطور باشع به طور درست و کامل 
حالا از اون الگو الهام گرفته میشه که ارور ها رو درست کنیم
 const schema = {
        name: Joi.string().min(3).required()
    }
    این خط یعنی name باید
    رشته باشه حداقل 3 کاراکتر باشه و ارسال بشه

  const result = Joi.validate(req.body, schema);
     // این خط کد میاد الگوی صحیح اسکیما رو با چیزی که پست شده مقایسه میکنه اگه درست بود حروجیش undifind 



     در اپدیت کردن 
     app.put();

     ما مثل 
     get , post

     باید اول ببینیم اون ارایه وجود داره یا نه بعدش ببینیم نامه نوشته شده تو بادی ریکوست با schema 
     هماهنگ هست یا نه 

     بعدش با یه 

     course.name = req.body.name;
     این کد 

     و بعدش سند کردنه کورس اپیدت میشه


     middleware 

     یه فانکشنه که بین درخواست و پاسخ های سرور ران میشه
     یعنی وقتی ریکوست میدیم 
     اول میددلور ها ران میشن کاراشونو میکنن بعد ریسپانس می‌گیریم،


     که به 3 نوع 
     custom

     مثله ماژوله یه فایل دیگه درست میکنی بعد یه فانکش درست میکنی هر کاری که میخوای رو توش میکنی بعد با متد next()
       
       میقرستیش به middlewareبعدی 
       یا به ریسپانس ها یا فانکش های روت 

       function log(req, res, next) {
    res.send(console.log('logger'));
    next();
}

module.exports = log;

اینم یه نوعش




     built in 

     که خودش به سه نوع 
     urlencoded
     تجزیه کردن اطلاعاتی که ار فورم های html می‌گیریم،
     هم key هم value


     static 
     با درخواست توی یه route 
     یه فایل استاتیک رو به نمایش میزاره 
     html css txt javascript

     json
     این کلان هر داده ای که با فورمته json درخواست بشه رو خانا میکنه 
     بدونه این ما خروحی undefined می‌گیریم،

     third-party middleware

     توابعی که نه خودت نوشتی نه express
     بقیه نویشتن و پابلیش کردن توی expressjs.com



محیط برنامه نویسی به 3 محیط تقسیم میشه 

یکی development

یعنی محیطی که توش دیلاگ میکنیم و کد میزنیم

یکی production

محیطی که میرسه به یورز و اجرا میشه

یکی هم test


حالا برای این که یه سری کد ها رو فقط زمان های مخصوص استفاده کنیم از این وضغیت عا استفاده میکنیم مثلا

لاک ها صرفا زمانه دولوپ استفاده میشه 
پس باید برن تو اون وضعیت

if (app.get('env') === 'development') {
    app.use(morgan('tiny'));
}

با این شرط فقط زمانی که دیلاگ میکنیم 
morgan میا بالا

برای زمانی که میخوایم production 
فقط کافیه که 
'development' بکنیم 'production'


process.env.NODE_ENV
این مارو میبره به محیط production


npm i config